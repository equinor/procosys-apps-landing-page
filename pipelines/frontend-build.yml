trigger:
  branches:
    include:
    - main

resources:
  repositories:
  - repository: self
  - repository: templates
    type: github
    name: equinor/procosys-infra
    endpoint: 'equinor'
    ref: infra/landing_page

# Global variables for the pipeline
variables:
  - template: src/variables/global-variables.yml@templates
  - template: src/apps-landing-page/apps-landing-page-variables.yml@templates
  - name: 'repositoryName'
    value: procosys/apps-landing-page

stages:
# Build Stage
- stage: build
  displayName: 'Build'
  variables:
    envName: 'build'
    serviceConnection: '${{ variables.nonProdServiceConnection }}'
    containerRegistry: '${{ variables.containerRegistryName }}'
    envGroupName: '$(globalPrefix)-$(fullAppName)-${{ variables.envName }}'
    dockerfilePath: '/.docker/Dockerfile'
    dockerRegistryServiceConnection: '$(dockerRegistryServiceConnectionName)'

  jobs:
  # Docker Build
  - template: /src/apps-landing-page/jobs/dockerbuild.yml@templates
    parameters:
      dependsOn: ''
      deploymentName: 'docker_build'
      condition: and(always(), eq(variables['Build.Reason'], 'PullRequest'))
      buildCommand: build
      envGroup: '${{ variables.envGroupName }}'
      dockerfilePath: '${{ variables.dockerfilePath }}'
      buildContext: '$(Build.SourcesDirectory)'
      repository: '${{ variables.repositoryName }}'
      dockerRegistryServiceConnection: '$(dockerRegistryServiceConnectionName)'

  # Docker Build and Push
  - template: /src/apps-landing-page/jobs/dockerbuild.yml@templates
    parameters:
      dependsOn: ''
      deploymentName: 'docker_build_push'
      condition: and(always(), ne(variables['Build.Reason'], 'PullRequest'))
      buildCommand: buildAndPush
      envGroup: '${{ variables.envGroupName }}'
      dockerfilePath: '${{ variables.dockerfilePath }}'
      buildContext: '$(Build.SourcesDirectory)'
      repository: '${{ variables.repositoryName }}'
      dockerRegistryServiceConnection: '$(dockerRegistryServiceConnectionName)'

# Deploy to Prod
- stage: prod
  displayName: 'Deploy to Prod'
  dependsOn: ''
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  variables:
    envName: 'prod'
    envLabel: 'prod'
    envGroupName: '$(globalPrefix)-$(fullAppName)-${{ variables.envName }}'
    serviceConnection: '${{ variables.prodServiceConnection }}'
    containerRegistry: '${{ variables.containerRegistryName }}'

  jobs:
  # Deploy to AKS
  - template: /src/apps-landing-page/jobs/deploy-aks.yml@templates
    parameters:
      deploymentName: 'deploy_to_k8s'
      dependsOn: ''
      serviceConnection: '${{ variables.serviceConnection }}'
      env: '${{ variables.envName }}'
      envRg: '${{ variables.aksRgName }}'
      envGroup: '${{ variables.envGroupName }}'
      dockerImage: '${{ variables.containerRegistry }}.azurecr.io/${{ variables.repositoryName }}:$(Build.BuildId)'
      clusterName: '${{ variables.aksProdName }}'
      replicas: 3