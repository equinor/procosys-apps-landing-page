trigger:
  branches:
    include:
    - pbi/110010_Move_Apps_landing_page_to_Radix  #TODO

resources:
  repositories:
  - repository: self
  - repository: templates
    type: github
    name: equinor/procosys-infra
    endpoint: 'equinor'
    ref: infra/landing_page

# Global variables for the pipeline
variables:
  - template: src/variables/global-variables.yml@templates
  - template: src/apps-landing-page/apps-landing-page-variables.yml@templates
  - name: 'repositoryName'
    value: procosys/apps-landing-page

stages:
# Build Stage
- stage: build
  displayName: 'Build'
  variables:
    envName: 'build'
    serviceConnection: '${{ variables.nonProdServiceConnection }}'
    containerRegistry: '${{ variables.containerRegistryName }}'
    envGroupName: '$(globalPrefix)-$(fullAppName)-${{ variables.envName }}'
    dockerfilePath: '/.docker/Dockerfile'
    dockerRegistryServiceConnection: '$(dockerRegistryServiceConnectionName)'

  jobs:
  # Docker Build
  - template: /src/apps-landing-page/jobs/dockerbuild.yml@templates
    parameters:
      dependsOn: ''
      deploymentName: 'docker_build'
      condition: and(always(), eq(variables['Build.Reason'], 'PullRequest'))
      buildCommand: build
      envGroup: '${{ variables.envGroupName }}'
      dockerfilePath: '${{ variables.dockerfilePath }}'
      buildContext: '$(Build.SourcesDirectory)'
      repository: '${{ variables.repositoryName }}'
      dockerRegistryServiceConnection: '$(dockerRegistryServiceConnectionName)'

  # Docker Build and Push
  - template: /src/apps-landing-page/jobs/dockerbuild.yml@templates
    parameters:
      dependsOn: ''
      deploymentName: 'docker_build_push'
      condition: and(always(), ne(variables['Build.Reason'], 'PullRequest'))
      buildCommand: buildAndPush
      envGroup: '${{ variables.envGroupName }}'
      dockerfilePath: '${{ variables.dockerfilePath }}'
      buildContext: '$(Build.SourcesDirectory)'
      repository: '${{ variables.repositoryName }}'
      dockerRegistryServiceConnection: '$(dockerRegistryServiceConnectionName)'

# Deploy to Prod
- stage: DeployProd
  displayName: 'Deploy to Prod'
  dependsOn: 'build'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/pbi/110010_Move_Apps_landing_page_to_Radix')) #TODO
  variables:
    envName: 'prod'
    envGroupName: '$(globalPrefix)-$(fullAppName)-${{ variables.envName }}'

  jobs:
    - deployment: Deploy
      displayName: Deploy Frontend
      environment: '${{ variables.envGroupName }}'
      pool:
        vmImage: 'windows-latest'
      strategy:
        runOnce:
          deploy:
            steps:   
              # Deploy to Radix
              - template: templates/radix-deploy.yml
                parameters:
                  imageTagNamesFrontend: '${{ variables.versionNumber }}$(Build.BuildId)'
